@using SurfsUpLibrary.Models
@inject IToastService toastService
@inject NavigationManager NavManager


<EditForm Model="rental" class="col-md-4" OnValidSubmit="MakeRental" OnInvalidSubmit="HandleInvalidSubmit">
    <div>
        <CustomLabel TItem="Rental" aspfor="@nameof(rental.StartRental)"></CustomLabel>
        <InputDate  @bind-Value="@rental.StartRental"></InputDate>
    </div>
     <div>
        <CustomLabel TItem="Rental" aspfor="@nameof(rental.EndRental)"></CustomLabel>
        <InputDate  @bind-Value="@rental.EndRental"></InputDate>
    </div>
    @if(user is null)
    {
    <div>
        <CustomLabel TItem="Rental" aspfor="@nameof(rental.GuestName)"></CustomLabel>
        <InputText @bind-Value="rental.GuestName"></InputText>
    </div>
    }
    <div>
        <button class="btn btn-primary" type="submit">Lej</button>
        <button class="btn btn-primary" @onclick="Cancel">Anuller</button>
    </div>
</EditForm>
@if (displayValidationErrorMessages)
{
    <div class="col-md-4" style="margin-top:10px">
        <label>Validation Messages: </label>
        <ValidationSummary />
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }

    public Rental rental = new Rental();

    public Board board { get; set; }

    private System.Security.Claims.ClaimsPrincipal user = new();

    bool displayValidationErrorMessages = false;

    public async Task MakeRental()
    {
        rental.BoardId = int.Parse(Id);
        try
        {
            Rental re = await RentalRepo.PostToAPI(rental);
            toastService.ShowSuccess($"Leje oprettet");
            NavManager.NavigateTo("/Boards");
        }
        catch (Exception)
        {
            NavManager.NavigateTo("/NotFound");
        }
    }

    private void HandleInvalidSubmit()
    {
        displayValidationErrorMessages = true;
    }


    protected async override Task OnInitializedAsync()
    {
        board = await SurfsUpLibrary.Models.Repositories.BoardRepo.GetFromAPI(int.Parse(Id));
        rental.StartRental = DateTime.Now;
        rental.EndRental = rental.StartRental.AddDays(1);
    }

    public void Cancel()
    {
        NavManager.NavigateTo("/Boards");
    }

    
}
