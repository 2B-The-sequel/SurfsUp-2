@model PaginatedList<SurfsUp.Models.Board>

@{
    ViewData["Title"] = "Boards";
}
@ViewData["UserId"]

<h1>Boards</h1>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        Find ved navn & type  <input type="text" style="margin-left: 10px; display: inline-block; width: 200px; vertical-align: middle" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Søg" style="vertical-align: middle" class="btn btn-outline-primary" />
        @if (User.IsInRole("Adminstrators"))
        {
            <a asp-action="Create" style="float: right; margin-right: 10px" class="btn btn-success">Tilføj ny</a>
        }
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th> 
                @Html.DisplayNameFor(model => model[0].Image)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> 
                    @Html.DisplayNameFor(model => model[0].Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Length)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Width)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Thickness)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Volume)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(model => model[0].Price)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TypeSortParm"]"asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(model => model[0].Type)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Equipment)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            @if (User.IsInRole("Adminstrators")|| !item.IsRented() )
            {
        <tr>
            <td>
                <image width="150px" src="@item.Image"></image>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Length) ft.
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Width) in.
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Thickness) in.
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Volume) L
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @for (int i = 0; i < item.Equipment.Count; i++)
                {
                    if (i == item.Equipment.Count - 1)
                    {
                        <a>@item.Equipment[i].Name</a>
                    }
                    else
                    {
                        <a>@item.Equipment[i].Name,</a>
                    }
                }
            </td>
            <td style="text-align: right">
                @if (User.IsInRole("Adminstrators"))
                {
                    <a asp-action="Edit" class="btn btn-outline-success" asp-route-id="@item.BoardId">Ændr</a>
                }
                
                @if (User.IsInRole("Adminstrators"))
                { 
                    <a asp-action="Delete" class="btn btn-outline-danger" asp-route-id="@item.BoardId">Slet</a>
                    
                }
                <a asp-action="Details" class="btn btn-outline-primary" asp-route-id="@item.BoardId">Detaljer</a>
                <a asp-action="CreateRental" class="btn btn-outline-primary" asp-route-id="@item.BoardId">Lej</a>
            </td>
        </tr>
        }
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-primary @prevDisabled">
   Tilbage
</a>
<label style="margin-left:5px; margin-right:5px; vertical-align: middle">@Model.PageNumInfo</label>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-primary @nextDisabled">
   Næste
</a>

<script>
    window.onload = function() {
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        const message = urlParams.get('Error');
        if (message != null)
            window.alert(message);
    }
</script>