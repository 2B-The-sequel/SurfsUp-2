@model SurfsUp.Models.Equipment

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Equipment</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="0" class="btn btn-primary" id="Create"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<div class="toast">
    <div class="toast-header">
        <strong class="me-auto">Toast Header</strong>
        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
    </div>
    <div class="toast-body">
        <p>Some text inside the toast body</p>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

    <!-- pop up besked script. getElementById er hvilken knap den skakl reagere på, og div classen der hedder toast er den besked der kommer frem under knappen -->
    <script>
        document.getElementById("Create").onclick = function () {
          var toastElList = [].slice.call(document.querySelectorAll('.toast'))
          var toastList = toastElList.map(function(toastEl) {
            return new bootstrap.Toast(toastEl)
          })
          toastList.forEach(toast => toast.show())
        }
    </script>
